Andy Tseng
art2589

.pos 0
# start
init:
    irmovq Stack, %rsp
    rrmovq %rsp, %rbp
    jmp main
    halt

# Sample linked list 
array:
    .align 8 
    ele1: 
        .quad 0x00a 
        .quad ele2 
    ele2: 
        .quad 0x0b0 
        .quad ele3 
    ele3: 
        .quad 0xc00 
        .quad 0 

main:
    irmovq array, %rax
    pushq %rax
    call rsum_list
    halt

rsum_list:
    pushq %rbp
    rrmovq %rsp, %rbp
    mrmovq 8(%rbp), %rax        # get ls->val
    andq %rax, %rax             # checks ls->val if zero
    jne loop                    # enter loop
    xorq %rax, %rax             # zero out
    jmp end

loop:
    mrmovq 8(%rbp), %rax        
    mrmovq (%rax), %rax
    pushq %rax
    mrmovq 0xa(%rbp), %rax
    mrmovq 8(%rbp), %rax
    pushq %rax
    call rsum_list
    mrmovq -8(%rbp), %rax
    addq %rbx, %rax

end:    
    rrmovq %rbp, %rsp
    popq %rbp
    ret

.pos 0x100
Stack:
    
