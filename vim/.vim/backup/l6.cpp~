#include <iostream>
using namespace std;
using namespace std{


struct A {
    
}

class Student {
    int dollars;
    friend void calculateBankBalance(Student&);
};

struct Base{
    static int count;
    int count;
    int id;
    Base(int idIWantToSet) : id(idIWantToSet)
    virtual void print() {
        cout << "Base()" << endl;
    }
};
int Base::count = 0;
void calculateBankBalance(Student& student) {
    student.dollars -= 100;
};

struct Derived : public Base{
    friend Student;
    int id;
    virtual void print() {
        cout << "DERIVED();" << id << this << id << Bsae::id << endl;
    }
    virtual void Ihavenoidea() = 0;

};

void f() {
    static int fibPrev = 0;
    
}
int main(int argc, char const* argv[]) {
    int* p = new int;
    float* p2 = new float;

    // delete p
    //
    Base* b = new Derived();
    b->print(); // calls function in base
}


